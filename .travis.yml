language: node_js
node_js:
  - "12.13.0"
os:
  - linux
  - osx
  - windows
before_install:
  - 'if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -y libc6-dev-i386 gcc-multilib g++-multilib        ; fi'
  - "if [[ \"$TRAVIS_OS_NAME\" == \"linux\" && \"$TRAVIS_PULL_REQUEST\" = \"false\" ]]; then curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh | sudo bash; fi"
  - 'if [[ "$TRAVIS_PULL_REQUEST" = "false" ]]; then npm install -g snyk; fi'

before_script:
  - npm install
  - 'if [[ "$TRAVIS_PULL_REQUEST" = "false" ]]; then snyk auth $SNYK_TOKEN; fi'
  - 'if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_PULL_REQUEST" = "false" ]]; then fossa init && fossa; fi'
  - mkdir prebuild-src
  - 'if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then cp -R src/. prebuild-src/; fi'
  - 'if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then xcopy src prebuild-src //E //C //Q //Y; fi'
  - node prebuild-minify.js
  - cd prebuild-src
  - npm install
  - 'if [[ "$TRAVIS_PULL_REQUEST" = "false" ]]; then snyk protect; fi'
  - 'if [[ "$TRAVIS_PULL_REQUEST" = "false" ]]; then snyk test; fi'
  - cd ..

script:
  - 'if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./node_modules/.bin/electron-builder build -l -p never        ; fi'
  - 'if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then ./node_modules/.bin/electron-builder build -m -p never          ; fi'
  - 'if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then node_modules\\.bin\\electron-builder build -w -p never      ; fi'

deploy:
  skip_cleanup: true
  provider: releases
  api_key:
    secure: nMIGJAoGBAKY1mJtfyxF51Z8XSE4q/kLixEUegc4UGyP0lTH/URfJ3Yg7HzNwOXNg\nxWYtBWg8foI6H71J25iDGFYFA7ihY1GwDDlfd/RmYzBHD3nrVRdzYvvqKZgAfS9J\nvQnqfMVBRNYlP6osvgf394BvOTCrXh7WEQX6zLD0PO1wKgIEHhBzAgMBAAE=
  file:
    - "dist/Buzzinga Linux (i386).AppImage"
    - "dist/Buzzinga Linux (x86_64).AppImage"
    - "dist/Buzzinga MacOS Image.dmg"
    - "dist/Buzzinga Windows Installer.exe"
  options:
    draft: true
  on:
    repo: chloe-lam/edex-ui
    branch: master
    tags: true
